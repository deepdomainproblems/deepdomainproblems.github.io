1:"$Sreact.fragment"
2:I[1968,["968","static/chunks/968-0853dab5531ea4ad.js","57","static/chunks/57-4430c49958c95c44.js","932","static/chunks/app/chapter/%5Bslug%5D/page-658eb8eb200361fa.js"],""]
3:I[6221,[],""]
4:I[5657,[],""]
5:I[1432,["968","static/chunks/968-0853dab5531ea4ad.js","177","static/chunks/app/layout-eccc8d2eb5aa8658.js"],"Analytics"]
6:I[6117,["968","static/chunks/968-0853dab5531ea4ad.js","177","static/chunks/app/layout-eccc8d2eb5aa8658.js"],"SpeedInsights"]
8:I[8002,[],"OutletBoundary"]
a:I[8002,[],"MetadataBoundary"]
c:I[8002,[],"ViewportBoundary"]
e:I[4404,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/607f7c5e6e2b1237.css","style"]
0:{"P":null,"b":"hCMAvhgE-mFZz4ubYYJHM","p":"","c":["","chapter","discovery-coding-in-ddp"],"i":false,"f":[[["",{"children":["chapter",{"children":[["slug","discovery-coding-in-ddp","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/607f7c5e6e2b1237.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"text-black bg-white dark:text-white dark:bg-black __variable_4d318d __variable_ea5f4b","children":["$","body",null,{"className":"antialiased max-w-xl mx-4 mt-8 lg:mx-auto","children":["$","main",null,{"className":"flex-auto min-w-0 mt-6 flex flex-col px-2 md:px-0","children":[["$","aside",null,{"className":"-ml-[8px] mb-16 tracking-tight","children":["$","div",null,{"className":"lg:sticky lg:top-20","children":["$","nav",null,{"className":"flex flex-row items-start relative px-0 pb-0 fade md:overflow-auto scroll-pr-6 md:relative","id":"nav","children":["$","div",null,{"className":"flex flex-row space-x-0 pr-10","children":[["$","$L2","/",{"href":"/","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"home"}],["$","$L2","/chapter",{"href":"/chapter","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"toc"}],["$","$L2","/about",{"href":"/about","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"about"}]]}]}]}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],["$","section",null,{"children":[["$","h1",null,{"className":"mb-8 text-2xl font-semibold tracking-tighter","children":"404 - Page Not Found"}],["$","p",null,{"className":"mb-4","children":"The page you are looking for does not exist."}]]}]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"mb-16","children":[["$","ul",null,{"className":"font-sm mt-8 flex flex-col space-x-0 space-y-2 text-neutral-600 md:flex-row md:space-x-4 md:space-y-0 dark:text-neutral-300","children":[["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"/rss","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"rss"}]]}]}],["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"https://x.com/domainproblems","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"x"}]]}]}],["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"https://www.linkedin.com/company/deep-domain-problems/","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"linkedin"}]]}]}]]}],["$","p",null,{"className":"mt-8 text-neutral-600 dark:text-neutral-300","children":["Â© ",2025," deepdomainproblems.com, All rights reserved."]}]]}],["$","$L5",null,{}],["$","$L6",null,{}]]}]}]}]]}],{"children":["chapter",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","chapter","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","discovery-coding-in-ddp","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","chapter","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",null,["$","$L8",null,{"children":"$L9"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Hwmdahrjw1tz_ZIHcvvFI",{"children":[["$","$La",null,{"children":"$Lb"}],["$","$Lc",null,{"children":"$Ld"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
7:["$","section",null,{"children":[["$","script",null,{"type":"application/ld+json","suppressHydrationWarning":true,"dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"Discovery coding in DDPs: A synthesis\",\"datePublished\":\"2025-02-23\",\"dateModified\":\"2025-02-23\",\"description\":\"An exploration of how Discovery Coding methodology can be effectively integrated with Deep Domain Problem solving approaches to create robust, domain-aware solutions.\",\"image\":\"/og?title=Discovery%20coding%20in%20DDPs%3A%20A%20synthesis\",\"url\":\"https://deepdomainproblems.com/chapter/discovery-coding-in-ddp\",\"author\":{\"@type\":\"Person\",\"name\":\"My Portfolio\"}}"}}],["$","h1",null,{"className":"title font-semibold text-2xl tracking-tighter","children":"Discovery coding in DDPs: A synthesis"}],["$","div",null,{"className":"flex justify-between items-center mt-2 mb-8 text-sm","children":["$","p",null,{"className":"text-sm text-neutral-600 dark:text-neutral-400","children":"Feb 23, 2025"}]}],["$","article",null,{"className":"prose","children":"$Lf"}]]}]
10:T2c3b,<span class="sh__line"><span class="sh__token--comment" style="color:var(--sh-comment)">// Example: Structured Discovery Pattern</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color:var(--sh-comment)"></span><span class="sh__token--keyword" style="color:var(--sh-keyword)">class</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--class" style="color:var(--sh-class)">DomainExplorer</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--sign" style="color:var(--sh-sign)">{</span><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color:var(--sh-space)">  </span><span class="sh__token--identifier" style="color:var(--sh-identifier)">private</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--identifier" style="color:var(--sh-identifier)">discoveries</span><span class="sh__token--sign" style="color:var(--sh-sign)">:</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--identifier" style="color:var(--sh-identifier)">Map</span><span class="sh__token--sign" style="color:var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color:var(--sh-entity)">string</span><span class="sh__token--sign" style="color:var(--sh-sign)">,</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--identifier" style="color:var(--sh-identifier)">unknown</span><span class="sh__token--sign" style="color:var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"> = new Map();</span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)">  private validations: ValidationRegistry = new ValidationRegistry();</span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)">  async exploreOperation(context: OperationContext): Promise</span><span class="sh__token--sign" style="color:var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color:var(--sh-entity)">Discovery</span><span class="sh__token--sign" style="color:var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"> </span><span class="sh__token--sign" style="color:var(--sh-sign)">{</span><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--comment" style="color:var(--sh-comment)">// Initialize from known patterns</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color:var(--sh-comment)"></span><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">let</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--identifier" style="color:var(--sh-identifier)">operation</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--sign" style="color:var(--sh-sign)">=</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">this</span><span class="sh__token--sign" style="color:var(--sh-sign)">.</span><span class="sh__token--property" style="color:var(--sh-property)">initializeFromKnownPatterns</span><span class="sh__token--sign" style="color:var(--sh-sign)">(</span><span class="sh__token--identifier" style="color:var(--sh-identifier)">context</span><span class="sh__token--sign" style="color:var(--sh-sign)">)</span><span class="sh__token--sign" style="color:var(--sh-sign)">;</span><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--comment" style="color:var(--sh-comment)">// Explore and adapt</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color:var(--sh-comment)"></span><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--identifier" style="color:var(--sh-identifier)">operation</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--sign" style="color:var(--sh-sign)">=</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">await</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">this</span><span class="sh__token--sign" style="color:var(--sh-sign)">.</span><span class="sh__token--property" style="color:var(--sh-property)">exploreAndAdapt</span><span class="sh__token--sign" style="color:var(--sh-sign)">(</span><span class="sh__token--identifier" style="color:var(--sh-identifier)">operation</span><span class="sh__token--sign" style="color:var(--sh-sign)">)</span><span class="sh__token--sign" style="color:var(--sh-sign)">;</span><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--comment" style="color:var(--sh-comment)">// Expert validation</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color:var(--sh-comment)"></span><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">const</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--identifier" style="color:var(--sh-identifier)">validation</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--sign" style="color:var(--sh-sign)">=</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">await</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">this</span><span class="sh__token--sign" style="color:var(--sh-sign)">.</span><span class="sh__token--property" style="color:var(--sh-property)">validations</span><span class="sh__token--sign" style="color:var(--sh-sign)">.</span><span class="sh__token--property" style="color:var(--sh-property)">validateWithExperts</span><span class="sh__token--sign" style="color:var(--sh-sign)">(</span><span class="sh__token--identifier" style="color:var(--sh-identifier)">operation</span><span class="sh__token--sign" style="color:var(--sh-sign)">)</span><span class="sh__token--sign" style="color:var(--sh-sign)">;</span><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--comment" style="color:var(--sh-comment)">// Pattern documentation</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color:var(--sh-comment)"></span><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">if</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--sign" style="color:var(--sh-sign)">(</span><span class="sh__token--identifier" style="color:var(--sh-identifier)">validation</span><span class="sh__token--sign" style="color:var(--sh-sign)">.</span><span class="sh__token--property" style="color:var(--sh-property)">newPatternsDiscovered</span><span class="sh__token--sign" style="color:var(--sh-sign)">)</span><span class="sh__token--space" style="color:var(--sh-space)"> </span><span class="sh__token--sign" style="color:var(--sh-sign)">{</span><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color:var(--sh-space)">      </span><span class="sh__token--keyword" style="color:var(--sh-keyword)">this</span><span class="sh__token--sign" style="color:var(--sh-sign)">.</span><span class="sh__token--property" style="color:var(--sh-property)">documentNewPatterns</span><span class="sh__token--sign" style="color:var(--sh-sign)">(</span><span class="sh__token--identifier" style="color:var(--sh-identifier)">validation</span><span class="sh__token--sign" style="color:var(--sh-sign)">.</span><span class="sh__token--property" style="color:var(--sh-property)">patterns</span><span class="sh__token--sign" style="color:var(--sh-sign)">)</span><span class="sh__token--sign" style="color:var(--sh-sign)">;</span><span class="sh__token--break" style="color:var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color:var(--sh-space)">    </span><span class="sh__token--sign" style="color:var(--sh-sign)">}</span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)">    return new Discovery(operation, validation);</span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)">  </span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)">}</span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)">}</span><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color:var(--sh-jsxliterals)"></span></span>f:[["$","p",null,{"children":"The intersection of Discovery Coding and Deep Domain Problems (DDPs) presents a compelling approach to solving complex industry challenges. While traditional methodologies emphasize upfront planning, tackling DDPs demands a more nuanced strategy combining structured analysis with exploratory development."}],"\n",["$","p",null,{"children":["For a comprehensive understanding of Deep Domain Problems and their characteristics, refer to our guide on ",["$","$L2",null,{"href":"/chapter/how-to-identify-deep-domain-problems-worth-solving","children":"How to Identify Deep Domain Problems Worth Solving"}],"."]}],"\n",["$","h2",null,{"id":"discovery-coding-in-ddp-context","children":[[["$","a","link-discovery-coding-in-ddp-context",{"href":"#discovery-coding-in-ddp-context","className":"anchor"}]],"Discovery Coding in DDP Context"]}],"\n",["$","p",null,{"children":["Discovery Coding, as described by ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://jimmyhmiller.github.io/discovery-coding","children":"Jimmy Miller"}],", is an approach where programmers explore solutions through code rather than extensive upfront planning. This methodology particularly resonates with DDPs for several reasons:"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Domain Knowledge Emergence"}],": Understanding emerges through hands-on engagement with the problem space, similar to how ",["$","$L2",null,{"href":"/chapter/the-evolving-role-of-programmers-in-solving-deep-domain-problems","children":"domain expertise develops over decades"}]," of practical experience."]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Tacit Knowledge Extraction"}],": The exploratory nature helps surface the \"it depends\" moments that experts struggle to articulate, a key challenge identified in our ",["$","$L2",null,{"href":"/chapter/how-to-break-down-a-deep-domain-problem","children":"guide to breaking down DDPs"}],"."]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"System Interaction Understanding"}],": Writing exploratory code helps grasp complex system interactions, as demonstrated in our ",["$","$L2",null,{"href":"/chapter/case-study-breakdown-a-ddp","children":"supply chain case study"}],"."]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"implementation-framework","children":[[["$","a","link-implementation-framework",{"href":"#implementation-framework","className":"anchor"}]],"Implementation Framework"]}],"\n",["$","h3",null,{"id":"two-phase-methodology","children":[[["$","a","link-two-phase-methodology",{"href":"#two-phase-methodology","className":"anchor"}]],"Two-Phase Methodology"]}],"\n",["$","p",null,{"children":"Betalectic's two-phase approach provides an effective framework for applying Discovery Coding to DDPs:"}],"\n",["$","h4",null,{"id":"phase-1-discovery-and-exploration","children":[[["$","a","link-phase-1-discovery-and-exploration",{"href":"#phase-1-discovery-and-exploration","className":"anchor"}]],"Phase 1: Discovery and Exploration"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Write exploratory code to understand domain complexities"}],"\n",["$","li",null,{"children":"Identify system boundaries and interactions"}],"\n",["$","li",null,{"children":"Surface hidden assumptions and requirements"}],"\n"]}],"\n",["$","h4",null,{"id":"phase-2-refinement-and-structure","children":[[["$","a","link-phase-2-refinement-and-structure",{"href":"#phase-2-refinement-and-structure","className":"anchor"}]],"Phase 2: Refinement and Structure"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Refactor discoveries into maintainable solutions"}],"\n",["$","li",null,{"children":"Apply identified domain patterns"}],"\n",["$","li",null,{"children":"Optimize for performance and scalability"}],"\n"]}],"\n",["$","p",null,{"children":["For detailed technical patterns and implementation strategies, see our ",["$","$L2",null,{"href":"/chapter/technical-patterns-for-solving-deep-domain-problems","children":"technical patterns guide"}],"."]}],"\n",["$","h3",null,{"id":"structured-knowledge-integration","children":[[["$","a","link-structured-knowledge-integration",{"href":"#structured-knowledge-integration","className":"anchor"}]],"Structured Knowledge Integration"]}],"\n",["$","p",null,{"children":["While Discovery Coding emphasizes exploration, successful DDP solutions require structured domain knowledge integration. Our ",["$","$L2",null,{"href":"/chapter/deep-domain-problems-in-lending-a-decision-making-case-study","children":"lending case study"}]," demonstrates this balance through:"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Knowledge Foundation"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Establish ",["$","$L2",null,{"href":"/chapter/ubiquitous-language-the-foundation-for-solving-deep-domain-problems","children":"Ubiquitous Language"}]]}],"\n",["$","li",null,{"children":"Document known workflows"}],"\n",["$","li",null,{"children":"Chart expert decision processes"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Guided Discovery"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Expert validation of discoveries"}],"\n",["$","li",null,{"children":"Regulatory compliance verification"}],"\n",["$","li",null,{"children":"Systematic documentation"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$10"},"className":"language-typescript"}]}],"\n",["$","h2",null,{"id":"risk-management","children":[[["$","a","link-risk-management",{"href":"#risk-management","className":"anchor"}]],"Risk Management"]}],"\n",["$","h3",null,{"id":"key-challenges","children":[[["$","a","link-key-challenges",{"href":"#key-challenges","className":"anchor"}]],"Key Challenges"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Complexity Management"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Regular refactoring with domain experts"}],"\n",["$","li",null,{"children":"Decision trees for discovery structure"}],"\n",["$","li",null,{"children":"Pattern documentation"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Compliance Assurance"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Integration of compliance checks"}],"\n",["$","li",null,{"children":"Automated verification systems"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Knowledge Retention"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Continuous documentation"}],"\n",["$","li",null,{"children":"Pattern tracking systems"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":["For strategies on addressing these challenges while taking solutions to market, see our guide on ",["$","$L2",null,{"href":"/chapter/how-to-take-ddps-solutions-to-market","children":"How to Take DDPs Solutions to Market"}],"."]}],"\n",["$","h2",null,{"id":"ai-integration","children":[[["$","a","link-ai-integration",{"href":"#ai-integration","className":"anchor"}]],"AI Integration"]}],"\n",["$","p",null,{"children":["When incorporating AI tools in Discovery Coding, follow the principles outlined in ",["$","$L2",null,{"href":"/chapter/coding-with-ai-and-sunk-cost-fallacy","children":"Coding with AI and Sunk Cost Fallacy"}],":"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Use AI as an exploration consultant"}],"\n",["$","li",null,{"children":"Set clear directional boundaries"}],"\n",["$","li",null,{"children":"Avoid over-investment in AI-generated paths"}],"\n",["$","li",null,{"children":"Balance AI capabilities with domain expertise"}],"\n"]}],"\n",["$","h2",null,{"id":"best-practices","children":[[["$","a","link-best-practices",{"href":"#best-practices","className":"anchor"}]],"Best Practices"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Pattern-Based Exploration"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Start with established patterns"}],"\n",["$","li",null,{"children":"Document deviations"}],"\n",["$","li",null,{"children":"Validate with experts"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Bounded Discovery"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Define exploration scope"}],"\n",["$","li",null,{"children":"Set validation checkpoints"}],"\n",["$","li",null,{"children":"Maintain expert feedback loops"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Systematic Documentation"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Record insights continuously"}],"\n",["$","li",null,{"children":"Map to domain concepts"}],"\n",["$","li",null,{"children":"Update shared knowledge base"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"id":"conclusion","children":[[["$","a","link-conclusion",{"href":"#conclusion","className":"anchor"}]],"Conclusion"]}],"\n",["$","p",null,{"children":"Discovery Coding, when properly integrated with DDP methodologies, offers a powerful approach to solving complex domain problems. The key lies in balancing exploration with structured knowledge while maintaining systematic documentation of insights."}],"\n",["$","p",null,{"children":"For implementation examples and deeper insights into specific aspects of DDP solutions, explore our case studies and technical guides:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","$L2",null,{"href":"/chapter/deep-domain-problems","children":"Deep Domain Problems: Beyond Surface-Level Solutions"}]}],"\n",["$","li",null,{"children":["$","$L2",null,{"href":"/chapter/case-study-breakdown-a-ddp","children":"Case Study: Decomposing a DDP in Supply Chain Optimization"}]}],"\n",["$","li",null,{"children":["$","$L2",null,{"href":"/chapter/the-evolving-role-of-programmers-in-solving-deep-domain-problems","children":"The Evolving Role of Programmers in Solving Deep Domain Problems"}]}],"\n"]}]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Discovery coding in DDPs: A synthesis | DDP"}],["$","meta","2",{"name":"description","content":"An exploration of how Discovery Coding methodology can be effectively integrated with Deep Domain Problem solving approaches to create robust, domain-aware solutions."}],["$","meta","3",{"name":"robots","content":"index, follow"}],["$","meta","4",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","5",{"name":"image","content":"https://deepdomainproblems.com/og.png"}],["$","meta","6",{"property":"og:title","content":"Discovery coding in DDPs: A synthesis"}],["$","meta","7",{"property":"og:description","content":"An exploration of how Discovery Coding methodology can be effectively integrated with Deep Domain Problem solving approaches to create robust, domain-aware solutions."}],["$","meta","8",{"property":"og:url","content":"https://deepdomainproblems.com/chapter/discovery-coding-in-ddp"}],["$","meta","9",{"property":"og:image","content":"https://deepdomainproblems.com/og.png"}],["$","meta","10",{"property":"og:type","content":"article"}],["$","meta","11",{"property":"article:published_time","content":"2025-02-23"}],["$","meta","12",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","13",{"name":"twitter:title","content":"Discovery coding in DDPs: A synthesis"}],["$","meta","14",{"name":"twitter:description","content":"An exploration of how Discovery Coding methodology can be effectively integrated with Deep Domain Problem solving approaches to create robust, domain-aware solutions."}],["$","meta","15",{"name":"twitter:image","content":"https://deepdomainproblems.com/og.png"}],["$","link","16",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
9:null
